#!/usr/bin/env bash
# scripts/gen_bootstrap.sh
# Usage:
#   scripts/gen_bootstrap.sh /path/to/workspace
#   scripts/gen_bootstrap.sh --all  # scan $HOME/refresh/workspaces/*

set -euo pipefail

work_from_upstream() {
  local ws="$1"
  local rup="$ws/docs/README.upstream.md"
  local out="$ws/ops/bootstrap.sh"
  local meta="$ws/ops/meta.json"

  [[ -f "$rup" ]] || { echo "skip: $ws (no README.upstream.md)"; return; }
  mkdir -p "$ws/ops/tasks"

  # Extract fenced code blocks (``` or ```bash|sh|shell) from upstream README
  # and flatten to a single executable bootstrap script.
  awk '
    BEGIN{inblk=0}
    /^```[[:alnum:]]*/{
      if(inblk==0){inblk=1; next}
      else{inblk=0; print "__BLOCK_END__"; next}
    }
    { if(inblk){ print } }
  ' "$rup" \
  | awk 'BEGIN{n=0}{ if($0=="__BLOCK_END__"){ n++ } else { print > "/tmp/_blk" n ".sh" } } END{ print n > "/tmp/_blk_count" }'

  {
    echo '#!/usr/bin/env bash'
    echo 'set -euo pipefail'
    echo
    echo '# Autogenerated from docs/README.upstream.md'
    if command -v jq >/dev/null 2>&1 && [[ -f "$meta" ]]; then
      echo "# Workspace: $(jq -r ".id // .name // \"unknown\"" "$meta")"
    fi
    echo
    echo 'main() {'
    blk_count=$(cat /tmp/_blk_count 2>/dev/null || echo 0)
    for i in $(seq 0 "${blk_count:-0}"); do
      blk="/tmp/_blk${i}.sh"
      [[ -s "$blk" ]] || continue
      echo "  # block $i"
      # Strip prompt symbols and trailing carriage returns; ignore empty lines
      sed -E 's/^\$[[:space:]]+//; s/\r$//' "$blk" \
      | grep -v '^[[:space:]]*$' \
      | sed 's/^/  /'
      echo
    done
    echo '}' ; echo
    echo 'main "$@"'
  } > "$out"

  chmod +x "$out"
  rm -f /tmp/_blk*.sh /tmp/_blk_count
  echo "wrote: $out"
}

scan_all() {
  local root="${HOME}/refresh/workspaces"
  [[ -d "$root" ]] || { echo "no workspaces at $root"; return; }
  find "$root" -maxdepth 2 -mindepth 2 -type d | sort | while read -r d; do
    work_from_upstream "$d" || true
  done
}

if [[ "${1:-}" == "--all" ]]; then
  scan_all
elif [[ -n "${1:-}" ]]; then
  work_from_upstream "$1"
else
  echo "usage: $0 /path/to/workspace | --all" >&2
  exit 2
fi
